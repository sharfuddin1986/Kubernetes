### The below steps can be used to setup kubernetes cluster on AWS using Kops ###

1 : Install Kops using the following link -https://kubernetes.io/docs/setup/production-environment/tools/kops/
    EC2 instance T2 micro 
2 : Update the system
    sudo apt update -y
    curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
    chmod +x kops-linux-amd64
    sudo mv kops-linux-amd64 /usr/local/bin/kops
    kops     (check the kops status it is installed or not
    kops version
    apt-get update 
    sudo apt install awscli -y
    validate if CLI is installed
    aws --version

3 : Create an IAM user with necessary permissions and programmatic access (Administrator access is recommended)
    IAM-user-create-name-kops_user-next-Attach policy directly-Administrator-full acess-create

4 : Generate the access key and secret for the above IAM user.
    IAM user-security credential-Access key-cli-create and save the secret acess key 

5 : Login to AWS from the Kops EC2 instance using the below command
    aws configure
    Put access key and secret key then region eas-us-1 and ouput format is json
6 : The above command will prompt for access key, secret access key, region and output format. Provide all the information
7 : Create an S3 bucket - This bucket will be used to store the cluster related information
    create s3-bucket name-sharfuddin-kops-create
8 : Create a hosted zone in Route53 - For the DNS, i am using Godaddy. This is where my DNS(sharfuddin.online) is registered.
9 : Add the NS records from Route53 hosted zone to Godaddy server records.
10: Install kubectl using the below link
     https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl


13 : Generate SSH keys by running the below command
    ssh-keygen -f .ssh/id_rsa
14 : Run the below example command to create the cluster. NOTE : You will have to update the command with your specific changes
    kops create cluster --name=kubernetes.cloudtechiez.cloud --state=s3://dgruploads-kube-kops-demo --zones=us-east-1a --node-count=1 --node-size=t2.medium --master-size=t2.medium --dns-zone=kubernetes.cloudtechiez.cloud
15 : Running the above command will generate a preview of all the resources that Kops will create. Once you are okay with the preview, run the below command to create those resources. Update the S3 bucket to your S3 bucket.
    kops update cluster --name kubernetes.cloudtechiez.cloud --yes --admin --state=s3://dgruploads-kube-kops-demo
